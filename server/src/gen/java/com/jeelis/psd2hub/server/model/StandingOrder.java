package com.jeelis.psd2hub.server.model;

import java.util.Objects;
import java.util.ArrayList;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.jeelis.psd2hub.server.model.BeneficiariesGETResponseCreditorAccount;
import com.jeelis.psd2hub.server.model.StandingOrdersGETResponseFinalPaymentAmount;
import com.jeelis.psd2hub.server.model.StandingOrdersGETResponseFirstPaymentAmount;
import com.jeelis.psd2hub.server.model.StandingOrdersGETResponseNextPaymentAmount;
import com.jeelis.psd2hub.server.model.StandingOrdersGETResponseServicer;
import io.swagger.annotations.ApiModel;
import java.util.Date;
import javax.validation.constraints.*;
import io.swagger.annotations.*;

@ApiModel(description="Standing Order")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaResteasyServerCodegen", date = "2017-08-30T01:38:28.934+02:00")
public class StandingOrder   {
  
  private String accountId = null;
  private String standingOrderId = null;
  private String frequency = null;
  private String reference = null;
  private Date firstPaymentDateTime = null;
  private StandingOrdersGETResponseFirstPaymentAmount firstPaymentAmount = null;
  private Date nextPaymentDateTime = null;
  private StandingOrdersGETResponseNextPaymentAmount nextPaymentAmount = null;
  private Date finalPaymentDateTime = null;
  private StandingOrdersGETResponseFinalPaymentAmount finalPaymentAmount = null;
  private StandingOrdersGETResponseServicer servicer = null;
  private BeneficiariesGETResponseCreditorAccount creditorAccount = null;

  /**
   * The date on which the first payment for a Standing Order schedule will be made.
   **/
  
  @ApiModelProperty(required = true, value = "The date on which the first payment for a Standing Order schedule will be made.")
  @JsonProperty("AccountId")
  @NotNull
 @Size(min=1,max=40)  public String getAccountId() {
    return accountId;
  }
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  /**
   * A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.
   **/
  
  @ApiModelProperty(value = "A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.")
  @JsonProperty("StandingOrderId")
 @Size(min=1,max=40)  public String getStandingOrderId() {
    return standingOrderId;
  }
  public void setStandingOrderId(String standingOrderId) {
    this.standingOrderId = standingOrderId;
  }

  /**
   * EvryWorkgDay - PSC070 IntrvlWkDay:PSC110:PSC080 (PSC070 code + PSC110 + PSC080) WkInMnthDay:PSC100:PSC080 (PSC070 code + PSC100 + PSC080) IntrvlMnthDay:PSC120:PSC090 (PSC070 code + PSC120 + PSC090) QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) PSC070 + PSC130 The following response codes may be generated by this data element: PSC070: T221 - Schedule code must be a valid enumeration value. PSC070: T245 - Must be provided for standing order only. PSC080: T222 - Day in week must be within defined bounds (range 1 to 5). PSC080: T229 - Must be present if Schedule Code &#x3D; IntrvlWkDay. PSC080: T231 - Must be present if Schedule Code &#x3D; WkInMnthDay. PSC090: T223 - Day in month must be within defined bounds (range -5 to 31 excluding: 0 &amp; 00). PSC090: T233 - Must be present if Schedule Code &#x3D; IntrvlMnthDay. PSC100: T224 - Week in month must be within defined bounds (range 1 to 5). PSC100: T232 - Must be present if Schedule Code &#x3D; WkInMnthDay. PSC110: T225 - Interval in weeks must be within defined bounds (range 1 to 9). PSC110: T230 - Must be present if Schedule Code &#x3D; IntrvlWkDay. PSC120: T226 - Interval in months must be a valid enumeration value (range 1 to 6, 12 and 24). PSC120: T234 - Must be present if Schedule Code &#x3D; IntrvlMnthDay. PSC130: T227 - Quarter Day must be a valid enumeration value. PSC130: T235 - Must be present if Schedule Code &#x3D; QtrDay. The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here: EvryWorkgDay IntrvlWkDay:0[1-9]:0[1-5] WkInMnthDay:0[1-5]:0[1-5] IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]) QtrDay:(ENGLISH|SCOTTISH|RECEIVED) Mandatory/Conditional/Optional/Parent/Leaf: OL Type: 35 char string Regular Expression(s): (EvryWorkgDay)|(IntrvlWkDay:0[1-9]:0[1-5])|(WkInMnthDay:0[1-5]:0[1-5])|(IntrvlMnthDay:(0[1- 6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))|(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))
   **/
  
  @ApiModelProperty(required = true, value = "EvryWorkgDay - PSC070 IntrvlWkDay:PSC110:PSC080 (PSC070 code + PSC110 + PSC080) WkInMnthDay:PSC100:PSC080 (PSC070 code + PSC100 + PSC080) IntrvlMnthDay:PSC120:PSC090 (PSC070 code + PSC120 + PSC090) QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) PSC070 + PSC130 The following response codes may be generated by this data element: PSC070: T221 - Schedule code must be a valid enumeration value. PSC070: T245 - Must be provided for standing order only. PSC080: T222 - Day in week must be within defined bounds (range 1 to 5). PSC080: T229 - Must be present if Schedule Code = IntrvlWkDay. PSC080: T231 - Must be present if Schedule Code = WkInMnthDay. PSC090: T223 - Day in month must be within defined bounds (range -5 to 31 excluding: 0 & 00). PSC090: T233 - Must be present if Schedule Code = IntrvlMnthDay. PSC100: T224 - Week in month must be within defined bounds (range 1 to 5). PSC100: T232 - Must be present if Schedule Code = WkInMnthDay. PSC110: T225 - Interval in weeks must be within defined bounds (range 1 to 9). PSC110: T230 - Must be present if Schedule Code = IntrvlWkDay. PSC120: T226 - Interval in months must be a valid enumeration value (range 1 to 6, 12 and 24). PSC120: T234 - Must be present if Schedule Code = IntrvlMnthDay. PSC130: T227 - Quarter Day must be a valid enumeration value. PSC130: T235 - Must be present if Schedule Code = QtrDay. The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here: EvryWorkgDay IntrvlWkDay:0[1-9]:0[1-5] WkInMnthDay:0[1-5]:0[1-5] IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]) QtrDay:(ENGLISH|SCOTTISH|RECEIVED) Mandatory/Conditional/Optional/Parent/Leaf: OL Type: 35 char string Regular Expression(s): (EvryWorkgDay)|(IntrvlWkDay:0[1-9]:0[1-5])|(WkInMnthDay:0[1-5]:0[1-5])|(IntrvlMnthDay:(0[1- 6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))|(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))")
  @JsonProperty("Frequency")
  @NotNull
 @Pattern(regexp="^((EvryWorkgDay)|(IntrvlWkDay:0[1-9]:0[1-5])|(WkInMnthDay:0[1-5]:0[1-5])|(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))|(QtrDay:(ENGLISH|SCOTTISH|RECEIVED)))$")  public String getFrequency() {
    return frequency;
  }
  public void setFrequency(String frequency) {
    this.frequency = frequency;
  }

  /**
   * Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction. Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money. If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor&#39;s reference or payment remittance identification should be quoted in the end-to-end transaction identification.
   **/
  
  @ApiModelProperty(value = "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction. Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money. If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.")
  @JsonProperty("Reference")
 @Size(min=1,max=35)  public String getReference() {
    return reference;
  }
  public void setReference(String reference) {
    this.reference = reference;
  }

  /**
   * The date on which the first payment for a Standing Order schedule will be made.
   **/
  
  @ApiModelProperty(value = "The date on which the first payment for a Standing Order schedule will be made.")
  @JsonProperty("FirstPaymentDateTime")
  public Date getFirstPaymentDateTime() {
    return firstPaymentDateTime;
  }
  public void setFirstPaymentDateTime(Date firstPaymentDateTime) {
    this.firstPaymentDateTime = firstPaymentDateTime;
  }

  /**
   **/
  
  @ApiModelProperty(value = "")
  @JsonProperty("FirstPaymentAmount")
  public StandingOrdersGETResponseFirstPaymentAmount getFirstPaymentAmount() {
    return firstPaymentAmount;
  }
  public void setFirstPaymentAmount(StandingOrdersGETResponseFirstPaymentAmount firstPaymentAmount) {
    this.firstPaymentAmount = firstPaymentAmount;
  }

  /**
   * The date on which the next payment for a Standing Order schedule will be made.
   **/
  
  @ApiModelProperty(required = true, value = "The date on which the next payment for a Standing Order schedule will be made.")
  @JsonProperty("NextPaymentDateTime")
  @NotNull
  public Date getNextPaymentDateTime() {
    return nextPaymentDateTime;
  }
  public void setNextPaymentDateTime(Date nextPaymentDateTime) {
    this.nextPaymentDateTime = nextPaymentDateTime;
  }

  /**
   **/
  
  @ApiModelProperty(value = "")
  @JsonProperty("NextPaymentAmount")
  public StandingOrdersGETResponseNextPaymentAmount getNextPaymentAmount() {
    return nextPaymentAmount;
  }
  public void setNextPaymentAmount(StandingOrdersGETResponseNextPaymentAmount nextPaymentAmount) {
    this.nextPaymentAmount = nextPaymentAmount;
  }

  /**
   * The date on which the final payment for a Standing Order schedule will be made.
   **/
  
  @ApiModelProperty(value = "The date on which the final payment for a Standing Order schedule will be made.")
  @JsonProperty("FinalPaymentDateTime")
  public Date getFinalPaymentDateTime() {
    return finalPaymentDateTime;
  }
  public void setFinalPaymentDateTime(Date finalPaymentDateTime) {
    this.finalPaymentDateTime = finalPaymentDateTime;
  }

  /**
   **/
  
  @ApiModelProperty(value = "")
  @JsonProperty("FinalPaymentAmount")
  public StandingOrdersGETResponseFinalPaymentAmount getFinalPaymentAmount() {
    return finalPaymentAmount;
  }
  public void setFinalPaymentAmount(StandingOrdersGETResponseFinalPaymentAmount finalPaymentAmount) {
    this.finalPaymentAmount = finalPaymentAmount;
  }

  /**
   **/
  
  @ApiModelProperty(value = "")
  @JsonProperty("Servicer")
  public StandingOrdersGETResponseServicer getServicer() {
    return servicer;
  }
  public void setServicer(StandingOrdersGETResponseServicer servicer) {
    this.servicer = servicer;
  }

  /**
   **/
  
  @ApiModelProperty(value = "")
  @JsonProperty("CreditorAccount")
  public BeneficiariesGETResponseCreditorAccount getCreditorAccount() {
    return creditorAccount;
  }
  public void setCreditorAccount(BeneficiariesGETResponseCreditorAccount creditorAccount) {
    this.creditorAccount = creditorAccount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StandingOrder standingOrder = (StandingOrder) o;
    return Objects.equals(accountId, standingOrder.accountId) &&
        Objects.equals(standingOrderId, standingOrder.standingOrderId) &&
        Objects.equals(frequency, standingOrder.frequency) &&
        Objects.equals(reference, standingOrder.reference) &&
        Objects.equals(firstPaymentDateTime, standingOrder.firstPaymentDateTime) &&
        Objects.equals(firstPaymentAmount, standingOrder.firstPaymentAmount) &&
        Objects.equals(nextPaymentDateTime, standingOrder.nextPaymentDateTime) &&
        Objects.equals(nextPaymentAmount, standingOrder.nextPaymentAmount) &&
        Objects.equals(finalPaymentDateTime, standingOrder.finalPaymentDateTime) &&
        Objects.equals(finalPaymentAmount, standingOrder.finalPaymentAmount) &&
        Objects.equals(servicer, standingOrder.servicer) &&
        Objects.equals(creditorAccount, standingOrder.creditorAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, standingOrderId, frequency, reference, firstPaymentDateTime, firstPaymentAmount, nextPaymentDateTime, nextPaymentAmount, finalPaymentDateTime, finalPaymentAmount, servicer, creditorAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StandingOrder {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    standingOrderId: ").append(toIndentedString(standingOrderId)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    firstPaymentDateTime: ").append(toIndentedString(firstPaymentDateTime)).append("\n");
    sb.append("    firstPaymentAmount: ").append(toIndentedString(firstPaymentAmount)).append("\n");
    sb.append("    nextPaymentDateTime: ").append(toIndentedString(nextPaymentDateTime)).append("\n");
    sb.append("    nextPaymentAmount: ").append(toIndentedString(nextPaymentAmount)).append("\n");
    sb.append("    finalPaymentDateTime: ").append(toIndentedString(finalPaymentDateTime)).append("\n");
    sb.append("    finalPaymentAmount: ").append(toIndentedString(finalPaymentAmount)).append("\n");
    sb.append("    servicer: ").append(toIndentedString(servicer)).append("\n");
    sb.append("    creditorAccount: ").append(toIndentedString(creditorAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

