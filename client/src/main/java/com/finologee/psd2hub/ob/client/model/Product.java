/*
 * Account Information APIs
 * Swagger specification for Account Information APIs
 *
 * OpenAPI spec version: v1.0.0
 * Contact: Craig.Greenhouse@openbanking.org.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.finologee.psd2hub.ob.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Product
 */
@ApiModel(description = "Product")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-30T02:03:16.815+02:00")
public class Product {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("ProductIdentifier")
  private String productIdentifier = null;

  /**
   * Descriptive code for the product category.
   */
  @JsonAdapter(ProductTypeEnum.Adapter.class)
  public enum ProductTypeEnum {
    BCA("BCA"),
    
    PCA("PCA");

    private String value;

    ProductTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProductTypeEnum fromValue(String text) {
      for (ProductTypeEnum b : ProductTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ProductTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProductTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProductTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ProductTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("ProductType")
  private ProductTypeEnum productType = null;

  @SerializedName("ProductName")
  private String productName = null;

  @SerializedName("SecondaryProductIdentifier")
  private String secondaryProductIdentifier = null;

  public Product accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public Product productIdentifier(String productIdentifier) {
    this.productIdentifier = productIdentifier;
    return this;
  }

   /**
   * Identifier within the parent organisation for the product. Must be unique in the organisation.
   * @return productIdentifier
  **/
  @ApiModelProperty(required = true, value = "Identifier within the parent organisation for the product. Must be unique in the organisation.")
  public String getProductIdentifier() {
    return productIdentifier;
  }

  public void setProductIdentifier(String productIdentifier) {
    this.productIdentifier = productIdentifier;
  }

  public Product productType(ProductTypeEnum productType) {
    this.productType = productType;
    return this;
  }

   /**
   * Descriptive code for the product category.
   * @return productType
  **/
  @ApiModelProperty(required = true, value = "Descriptive code for the product category.")
  public ProductTypeEnum getProductType() {
    return productType;
  }

  public void setProductType(ProductTypeEnum productType) {
    this.productType = productType;
  }

  public Product productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * The name of the product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.
   * @return productName
  **/
  @ApiModelProperty(value = "The name of the product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public Product secondaryProductIdentifier(String secondaryProductIdentifier) {
    this.secondaryProductIdentifier = secondaryProductIdentifier;
    return this;
  }

   /**
   * Identifier within the parent organisation for the product. Must be unique in the organisation.
   * @return secondaryProductIdentifier
  **/
  @ApiModelProperty(value = "Identifier within the parent organisation for the product. Must be unique in the organisation.")
  public String getSecondaryProductIdentifier() {
    return secondaryProductIdentifier;
  }

  public void setSecondaryProductIdentifier(String secondaryProductIdentifier) {
    this.secondaryProductIdentifier = secondaryProductIdentifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.accountId, product.accountId) &&
        Objects.equals(this.productIdentifier, product.productIdentifier) &&
        Objects.equals(this.productType, product.productType) &&
        Objects.equals(this.productName, product.productName) &&
        Objects.equals(this.secondaryProductIdentifier, product.secondaryProductIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, productIdentifier, productType, productName, secondaryProductIdentifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    productIdentifier: ").append(toIndentedString(productIdentifier)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    secondaryProductIdentifier: ").append(toIndentedString(secondaryProductIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

