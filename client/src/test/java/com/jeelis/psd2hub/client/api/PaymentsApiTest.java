/*
 * Payment Initiation APIs
 * Draft Swagger specification for Payment Initiation
 *
 * OpenAPI spec version: v1.0.0
 * Contact: craig.greenhouse@openbanking.org.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.jeelis.psd2hub.client.api;

import com.jeelis.psd2hub.client.ApiException;
import com.jeelis.psd2hub.client.model.PaymentSetupPOSTRequest;
import com.jeelis.psd2hub.client.model.PaymentSetupPOSTResponse;
import com.jeelis.psd2hub.client.model.PaymentSubmissionPOSTRequest;
import com.jeelis.psd2hub.client.model.PaymentSubmitPOST201Response;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentsApi
 */
@Ignore
public class PaymentsApiTest {

    private final PaymentsApi api = new PaymentsApi();

    
    /**
     * Create a payment submission
     *
     * Submit a previously setup payment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPaymentSubmissionTest() throws ApiException {
        String xIdempotencyKey = null;
        String xFapiFinancialId = null;
        String authorization = null;
        String xJwsSignature = null;
        PaymentSubmissionPOSTRequest body = null;
        String xFapiCustomerLastLoggedTime = null;
        String xFapiCustomerIpAddress = null;
        String xFapiInteractionId = null;
        PaymentSubmitPOST201Response response = api.createPaymentSubmission(xIdempotencyKey, xFapiFinancialId, authorization, xJwsSignature, body, xFapiCustomerLastLoggedTime, xFapiCustomerIpAddress, xFapiInteractionId);

        // TODO: test validations
    }
    
    /**
     * Create a single immediate payment
     *
     * Create a single immediate payment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSingleImmediatePaymentTest() throws ApiException {
        String xIdempotencyKey = null;
        String xFapiFinancialId = null;
        String authorization = null;
        String xJwsSignature = null;
        PaymentSetupPOSTRequest body = null;
        String xFapiCustomerLastLoggedTime = null;
        String xFapiCustomerIpAddress = null;
        String xFapiInteractionId = null;
        PaymentSetupPOSTResponse response = api.createSingleImmediatePayment(xIdempotencyKey, xFapiFinancialId, authorization, xJwsSignature, body, xFapiCustomerLastLoggedTime, xFapiCustomerIpAddress, xFapiInteractionId);

        // TODO: test validations
    }
    
    /**
     * Get a payment submission
     *
     * Get payment submission
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentSubmissionTest() throws ApiException {
        String paymentSubmissionId = null;
        String xFapiFinancialId = null;
        String authorization = null;
        String xFapiCustomerLastLoggedTime = null;
        String xFapiCustomerIpAddress = null;
        String xFapiInteractionId = null;
        PaymentSubmitPOST201Response response = api.getPaymentSubmission(paymentSubmissionId, xFapiFinancialId, authorization, xFapiCustomerLastLoggedTime, xFapiCustomerIpAddress, xFapiInteractionId);

        // TODO: test validations
    }
    
    /**
     * Get a single immediate payment
     *
     * Get a single immediate payment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSingleImmediatePaymentTest() throws ApiException {
        String paymentId = null;
        String xFapiFinancialId = null;
        String authorization = null;
        String xFapiCustomerLastLoggedTime = null;
        String xFapiCustomerIpAddress = null;
        String xFapiInteractionId = null;
        PaymentSetupPOSTResponse response = api.getSingleImmediatePayment(paymentId, xFapiFinancialId, authorization, xFapiCustomerLastLoggedTime, xFapiCustomerIpAddress, xFapiInteractionId);

        // TODO: test validations
    }
    
}
